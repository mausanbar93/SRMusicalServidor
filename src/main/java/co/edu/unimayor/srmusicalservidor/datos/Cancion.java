package co.edu.unimayor.srmusicalservidor.datos;
// Generated 29/03/2018 01:10:35 PM by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlTransient;

/**
 * Cancion generated by hbm2java
 */
@Entity
@Table(name = "cancion")
public class Cancion implements java.io.Serializable {

    private Integer id;
    private Estado estadoByEstadoApiRepustate;
    private Estado estadoByEstadoApiTextProcessing;
    private Estado estadoByEstadoApiSentiment140;
    private Estado estadoByEstadoApiSentiment;
    private Valoracion valoracion;
    private String artista;
    private String titulo;
    private String letra;
    private String api;
    private String genero;
    private Integer numeroVisualizacion;
    private Integer duracionSegundo;
    private boolean habilitado;
    private Set<CancionUsuarioValoracion> cancionUsuarioValoracions = new HashSet<CancionUsuarioValoracion>(0);

    public Cancion() {
    }

    public Cancion(String artista, String titulo, String letra, String api, boolean habilitado) {
        this.artista = artista;
        this.titulo = titulo;
        this.letra = letra;
        this.api = api;
        this.habilitado = habilitado;
    }

    public Cancion(Estado estadoByEstadoApiRepustate, Estado estadoByEstadoApiTextProcessing, Estado estadoByEstadoApiSentiment140, Estado estadoByEstadoApiSentiment, Valoracion valoracion, String artista, String titulo, String letra, String api, String genero, Integer numeroVisualizacion, Integer duracionSegundo, boolean habilitado, Set<CancionUsuarioValoracion> cancionUsuarioValoracions) {
        this.estadoByEstadoApiRepustate = estadoByEstadoApiRepustate;
        this.estadoByEstadoApiTextProcessing = estadoByEstadoApiTextProcessing;
        this.estadoByEstadoApiSentiment140 = estadoByEstadoApiSentiment140;
        this.estadoByEstadoApiSentiment = estadoByEstadoApiSentiment;
        this.valoracion = valoracion;
        this.artista = artista;
        this.titulo = titulo;
        this.letra = letra;
        this.api = api;
        this.genero = genero;
        this.numeroVisualizacion = numeroVisualizacion;
        this.duracionSegundo = duracionSegundo;
        this.habilitado = habilitado;
        this.cancionUsuarioValoracions = cancionUsuarioValoracions;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "id", unique = true, nullable = false)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "estado_api_repustate")
    public Estado getEstadoByEstadoApiRepustate() {
        return this.estadoByEstadoApiRepustate;
    }

    public void setEstadoByEstadoApiRepustate(Estado estadoByEstadoApiRepustate) {
        this.estadoByEstadoApiRepustate = estadoByEstadoApiRepustate;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "estado_api_text_processing")
    public Estado getEstadoByEstadoApiTextProcessing() {
        return this.estadoByEstadoApiTextProcessing;
    }

    public void setEstadoByEstadoApiTextProcessing(Estado estadoByEstadoApiTextProcessing) {
        this.estadoByEstadoApiTextProcessing = estadoByEstadoApiTextProcessing;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "estado_api_sentiment140")
    public Estado getEstadoByEstadoApiSentiment140() {
        return this.estadoByEstadoApiSentiment140;
    }

    public void setEstadoByEstadoApiSentiment140(Estado estadoByEstadoApiSentiment140) {
        this.estadoByEstadoApiSentiment140 = estadoByEstadoApiSentiment140;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "estado_api_sentiment")
    public Estado getEstadoByEstadoApiSentiment() {
        return this.estadoByEstadoApiSentiment;
    }

    public void setEstadoByEstadoApiSentiment(Estado estadoByEstadoApiSentiment) {
        this.estadoByEstadoApiSentiment = estadoByEstadoApiSentiment;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "valoracion")
    public Valoracion getValoracion() {
        return this.valoracion;
    }

    public void setValoracion(Valoracion valoracion) {
        this.valoracion = valoracion;
    }

    @Column(name = "artista", nullable = false, length = 100)
    public String getArtista() {
        return this.artista;
    }

    public void setArtista(String artista) {
        this.artista = artista;
    }

    @Column(name = "titulo", nullable = false, length = 100)
    public String getTitulo() {
        return this.titulo;
    }

    public void setTitulo(String titulo) {
        this.titulo = titulo;
    }

    @Column(name = "letra", nullable = false, length = 5000)
    public String getLetra() {
        return this.letra;
    }

    public void setLetra(String letra) {
        this.letra = letra;
    }

    @Column(name = "api", nullable = false, length = 10)
    public String getApi() {
        return this.api;
    }

    public void setApi(String api) {
        this.api = api;
    }

    @Column(name = "genero", length = 20)
    public String getGenero() {
        return this.genero;
    }

    public void setGenero(String genero) {
        this.genero = genero;
    }

    @Column(name = "numero_visualizacion")
    public Integer getNumeroVisualizacion() {
        return this.numeroVisualizacion;
    }

    public void setNumeroVisualizacion(Integer numeroVisualizacion) {
        this.numeroVisualizacion = numeroVisualizacion;
    }

    @Column(name = "duracion_segundo")
    public Integer getDuracionSegundo() {
        return this.duracionSegundo;
    }

    public void setDuracionSegundo(Integer duracionSegundo) {
        this.duracionSegundo = duracionSegundo;
    }

    @Column(name = "habilitado", nullable = false)
    public boolean isHabilitado() {
        return this.habilitado;
    }

    public void setHabilitado(boolean habilitado) {
        this.habilitado = habilitado;
    }

    @XmlTransient
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "cancion")
    public Set<CancionUsuarioValoracion> getCancionUsuarioValoracions() {
        return this.cancionUsuarioValoracions;
    }

    public void setCancionUsuarioValoracions(Set<CancionUsuarioValoracion> cancionUsuarioValoracions) {
        this.cancionUsuarioValoracions = cancionUsuarioValoracions;
    }

}
